AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  LambdaS3Key:
    Type: String
    Description: S3 key for Lambda zip

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: laravel-lambda-execution-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole

  LaravelLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: laravel-backend
      Handler: public/index.php 
      Runtime: provided.al2
      Role: !GetAtt LambdaExecutionRole.Arn
      Layers:
        - arn:aws:lambda:us-east-1:534081306603:layer:php-82-fpm:93

      Code:
        S3Bucket: s3-backend-lambda
        S3Key: !Ref LambdaS3Key
      MemorySize: 1024
      Timeout: 30
      Environment:
        Variables:
          APP_ENV: production
          APP_KEY: "base64:hz9t9qXQ0b6YyVfWrOhIrWu1/8u8tbwhMuFTlbIgNzU="
          LOG_CHANNEL: stderr
          DB_CONNECTION: pgsql
          DB_HOST: rg-dev.cn4c64a462oy.us-east-1.rds.amazonaws.com
          DB_PORT: 5432
          DB_DATABASE: postgres
          DB_USERNAME: postgres
          DB_PASSWORD: ZycmzbPK2oH37xcRV7Lw
      VpcConfig:
        SecurityGroupIds:
          - sg-07ed15a1e4f8a4fe0
        SubnetIds:
          - subnet-0b4f040052143f3b4
          - subnet-0300de6f134a549cc

  LambdaApiGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: LaravelApi
      ProtocolType: HTTP

  LambdaApiIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref LambdaApiGateway
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LaravelLambdaFunction.Arn}/invocations
      PayloadFormatVersion: '2.0'

  LambdaApiRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref LambdaApiGateway
      RouteKey: 'ANY /{proxy+}'
      Target: !Sub integrations/${LambdaApiIntegration}

  LambdaApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref LambdaApiGateway
      StageName: prod
      AutoDeploy: true

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LaravelLambdaFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${LambdaApiGateway}/*/*/*